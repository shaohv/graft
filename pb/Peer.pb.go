// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Peer.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Entries struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=Term,json=term,proto3" json:"Term,omitempty"`
	LogIdx               uint64   `protobuf:"varint,2,opt,name=LogIdx,json=logIdx,proto3" json:"LogIdx,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
	K                    string   `protobuf:"bytes,4,opt,name=k,proto3" json:"k,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entries) Reset()         { *m = Entries{} }
func (m *Entries) String() string { return proto.CompactTextString(m) }
func (*Entries) ProtoMessage()    {}
func (*Entries) Descriptor() ([]byte, []int) {
	return fileDescriptor_abb90b067df396d6, []int{0}
}

func (m *Entries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entries.Unmarshal(m, b)
}
func (m *Entries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entries.Marshal(b, m, deterministic)
}
func (m *Entries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entries.Merge(m, src)
}
func (m *Entries) XXX_Size() int {
	return xxx_messageInfo_Entries.Size(m)
}
func (m *Entries) XXX_DiscardUnknown() {
	xxx_messageInfo_Entries.DiscardUnknown(m)
}

var xxx_messageInfo_Entries proto.InternalMessageInfo

func (m *Entries) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Entries) GetLogIdx() uint64 {
	if m != nil {
		return m.LogIdx
	}
	return 0
}

func (m *Entries) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Entries) GetK() string {
	if m != nil {
		return m.K
	}
	return ""
}

type AppendEntriesReq struct {
	Term                 uint64     `protobuf:"varint,1,opt,name=Term,json=term,proto3" json:"Term,omitempty"`
	LeaderId             uint32     `protobuf:"varint,2,opt,name=LeaderId,json=leaderId,proto3" json:"LeaderId,omitempty"`
	PrevLogTerm          uint64     `protobuf:"varint,3,opt,name=PrevLogTerm,json=prevLogTerm,proto3" json:"PrevLogTerm,omitempty"`
	PrevLogIdx           uint64     `protobuf:"varint,4,opt,name=PrevLogIdx,json=prevLogIdx,proto3" json:"PrevLogIdx,omitempty"`
	LeaderCommitLogIdx   uint64     `protobuf:"varint,5,opt,name=LeaderCommitLogIdx,json=leaderCommitLogIdx,proto3" json:"LeaderCommitLogIdx,omitempty"`
	Entries              []*Entries `protobuf:"bytes,6,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AppendEntriesReq) Reset()         { *m = AppendEntriesReq{} }
func (m *AppendEntriesReq) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesReq) ProtoMessage()    {}
func (*AppendEntriesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_abb90b067df396d6, []int{1}
}

func (m *AppendEntriesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesReq.Unmarshal(m, b)
}
func (m *AppendEntriesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesReq.Marshal(b, m, deterministic)
}
func (m *AppendEntriesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesReq.Merge(m, src)
}
func (m *AppendEntriesReq) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesReq.Size(m)
}
func (m *AppendEntriesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesReq proto.InternalMessageInfo

func (m *AppendEntriesReq) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesReq) GetLeaderId() uint32 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

func (m *AppendEntriesReq) GetPrevLogTerm() uint64 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesReq) GetPrevLogIdx() uint64 {
	if m != nil {
		return m.PrevLogIdx
	}
	return 0
}

func (m *AppendEntriesReq) GetLeaderCommitLogIdx() uint64 {
	if m != nil {
		return m.LeaderCommitLogIdx
	}
	return 0
}

func (m *AppendEntriesReq) GetEntries() []*Entries {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AppendEntriesRsp struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=Term,json=term,proto3" json:"Term,omitempty"`
	RetCode              int32    `protobuf:"varint,2,opt,name=RetCode,json=retCode,proto3" json:"RetCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesRsp) Reset()         { *m = AppendEntriesRsp{} }
func (m *AppendEntriesRsp) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesRsp) ProtoMessage()    {}
func (*AppendEntriesRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_abb90b067df396d6, []int{2}
}

func (m *AppendEntriesRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesRsp.Unmarshal(m, b)
}
func (m *AppendEntriesRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesRsp.Marshal(b, m, deterministic)
}
func (m *AppendEntriesRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesRsp.Merge(m, src)
}
func (m *AppendEntriesRsp) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesRsp.Size(m)
}
func (m *AppendEntriesRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesRsp proto.InternalMessageInfo

func (m *AppendEntriesRsp) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRsp) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

type VoteReq struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=Term,json=term,proto3" json:"Term,omitempty"`
	CandiId              uint32   `protobuf:"varint,2,opt,name=CandiId,json=candiId,proto3" json:"CandiId,omitempty"`
	LastLogIdx           uint64   `protobuf:"varint,3,opt,name=LastLogIdx,json=lastLogIdx,proto3" json:"LastLogIdx,omitempty"`
	LastLogTerm          uint64   `protobuf:"varint,4,opt,name=LastLogTerm,json=lastLogTerm,proto3" json:"LastLogTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteReq) Reset()         { *m = VoteReq{} }
func (m *VoteReq) String() string { return proto.CompactTextString(m) }
func (*VoteReq) ProtoMessage()    {}
func (*VoteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_abb90b067df396d6, []int{3}
}

func (m *VoteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteReq.Unmarshal(m, b)
}
func (m *VoteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteReq.Marshal(b, m, deterministic)
}
func (m *VoteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteReq.Merge(m, src)
}
func (m *VoteReq) XXX_Size() int {
	return xxx_messageInfo_VoteReq.Size(m)
}
func (m *VoteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteReq.DiscardUnknown(m)
}

var xxx_messageInfo_VoteReq proto.InternalMessageInfo

func (m *VoteReq) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *VoteReq) GetCandiId() uint32 {
	if m != nil {
		return m.CandiId
	}
	return 0
}

func (m *VoteReq) GetLastLogIdx() uint64 {
	if m != nil {
		return m.LastLogIdx
	}
	return 0
}

func (m *VoteReq) GetLastLogTerm() uint64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type VoteRsp struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=Term,json=term,proto3" json:"Term,omitempty"`
	VoteGranted          int32    `protobuf:"varint,2,opt,name=VoteGranted,json=voteGranted,proto3" json:"VoteGranted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteRsp) Reset()         { *m = VoteRsp{} }
func (m *VoteRsp) String() string { return proto.CompactTextString(m) }
func (*VoteRsp) ProtoMessage()    {}
func (*VoteRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_abb90b067df396d6, []int{4}
}

func (m *VoteRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteRsp.Unmarshal(m, b)
}
func (m *VoteRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteRsp.Marshal(b, m, deterministic)
}
func (m *VoteRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteRsp.Merge(m, src)
}
func (m *VoteRsp) XXX_Size() int {
	return xxx_messageInfo_VoteRsp.Size(m)
}
func (m *VoteRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteRsp.DiscardUnknown(m)
}

var xxx_messageInfo_VoteRsp proto.InternalMessageInfo

func (m *VoteRsp) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *VoteRsp) GetVoteGranted() int32 {
	if m != nil {
		return m.VoteGranted
	}
	return 0
}

func init() {
	proto.RegisterType((*Entries)(nil), "pb.Entries")
	proto.RegisterType((*AppendEntriesReq)(nil), "pb.AppendEntriesReq")
	proto.RegisterType((*AppendEntriesRsp)(nil), "pb.AppendEntriesRsp")
	proto.RegisterType((*VoteReq)(nil), "pb.VoteReq")
	proto.RegisterType((*VoteRsp)(nil), "pb.VoteRsp")
}

func init() { proto.RegisterFile("Peer.proto", fileDescriptor_abb90b067df396d6) }

var fileDescriptor_abb90b067df396d6 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x25, 0xed, 0x36, 0xa9, 0x13, 0x0b, 0x32, 0x88, 0x84, 0x1e, 0x24, 0x04, 0x84, 0x9e, 0x72,
	0xa8, 0x47, 0x0f, 0x2a, 0x55, 0xa4, 0x90, 0x43, 0x09, 0xa2, 0xe7, 0xad, 0x3b, 0x94, 0xd2, 0x7c,
	0xac, 0x9b, 0xa5, 0xe8, 0x6f, 0xf5, 0xcf, 0xc8, 0x6e, 0xb6, 0x0d, 0xd6, 0xf6, 0xf8, 0xde, 0xbc,
	0x9d, 0x99, 0xf7, 0x76, 0x00, 0x16, 0x44, 0x2a, 0x95, 0xaa, 0xd6, 0x35, 0xf6, 0xe4, 0x32, 0x79,
	0x87, 0xe0, 0xb9, 0xd2, 0x6a, 0x4d, 0x0d, 0x22, 0xb0, 0x57, 0x52, 0x65, 0xe4, 0xc5, 0xde, 0x84,
	0xe5, 0x4c, 0x93, 0x2a, 0xf1, 0x0a, 0xfc, 0xac, 0x5e, 0xcd, 0xc5, 0x57, 0xd4, 0xb3, 0xac, 0x5f,
	0x58, 0x64, 0xb4, 0x4f, 0x5c, 0xf3, 0xa8, 0x1f, 0x7b, 0x93, 0xb3, 0x9c, 0x09, 0xae, 0x39, 0x9e,
	0x83, 0xb7, 0x89, 0x98, 0x25, 0xbc, 0x4d, 0xf2, 0xe3, 0xc1, 0xc5, 0xa3, 0x94, 0x54, 0x09, 0xd7,
	0x3f, 0xa7, 0xcf, 0xa3, 0x23, 0xc6, 0x30, 0xcc, 0x88, 0x0b, 0x52, 0x73, 0x61, 0x87, 0x8c, 0xf2,
	0x61, 0xe1, 0x30, 0xc6, 0x10, 0x2e, 0x14, 0x6d, 0xb3, 0x7a, 0x65, 0x9f, 0xf5, 0xed, 0xb3, 0x50,
	0x76, 0x14, 0x5e, 0x03, 0x38, 0x85, 0x59, 0x92, 0x59, 0x01, 0xc8, 0x3d, 0x83, 0x29, 0x60, 0xdb,
	0x7d, 0x56, 0x97, 0xe5, 0x5a, 0x3b, 0xdd, 0xc0, 0xea, 0xb0, 0xf8, 0x57, 0xc1, 0x1b, 0x08, 0xa8,
	0xdd, 0x37, 0xf2, 0xe3, 0xfe, 0x24, 0x9c, 0x86, 0xa9, 0x5c, 0xa6, 0x3b, 0x0b, 0xbb, 0x5a, 0xf2,
	0x70, 0x68, 0xae, 0x91, 0x47, 0xcd, 0x45, 0x10, 0xe4, 0xa4, 0x67, 0xb5, 0x20, 0xeb, 0x6d, 0x90,
	0x07, 0xaa, 0x85, 0xc9, 0x37, 0x04, 0x6f, 0xb5, 0xa6, 0x53, 0xa9, 0x44, 0x10, 0xcc, 0x78, 0x25,
	0xd6, 0xfb, 0x50, 0x82, 0x8f, 0x16, 0x1a, 0xc7, 0x19, 0x6f, 0x76, 0x4e, 0xda, 0x48, 0xa0, 0xd8,
	0x33, 0x26, 0x33, 0x57, 0xb7, 0x4d, 0xdb, 0x48, 0xc2, 0xa2, 0xa3, 0x92, 0x7b, 0x37, 0xfa, 0xc4,
	0xce, 0x31, 0x84, 0xa6, 0xfc, 0xa2, 0x78, 0xa5, 0x49, 0xb8, 0xbd, 0xc3, 0x6d, 0x47, 0x4d, 0x09,
	0x98, 0x39, 0x23, 0xbc, 0x83, 0xd1, 0x9f, 0x14, 0xf0, 0xd2, 0x84, 0x75, 0xf8, 0xeb, 0xe3, 0x23,
	0x6c, 0x23, 0x31, 0x06, 0x66, 0xc6, 0xa0, 0x0d, 0xd8, 0x45, 0x31, 0xee, 0x40, 0x23, 0x97, 0xbe,
	0x3d, 0xd3, 0xdb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x1c, 0xf8, 0x36, 0xb4, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PeerClient is the client API for Peer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PeerClient interface {
	AppendEntries(ctx context.Context, in *AppendEntriesReq, opts ...grpc.CallOption) (*AppendEntriesRsp, error)
	Vote(ctx context.Context, in *VoteReq, opts ...grpc.CallOption) (*VoteRsp, error)
}

type peerClient struct {
	cc *grpc.ClientConn
}

func NewPeerClient(cc *grpc.ClientConn) PeerClient {
	return &peerClient{cc}
}

func (c *peerClient) AppendEntries(ctx context.Context, in *AppendEntriesReq, opts ...grpc.CallOption) (*AppendEntriesRsp, error) {
	out := new(AppendEntriesRsp)
	err := c.cc.Invoke(ctx, "/pb.Peer/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerClient) Vote(ctx context.Context, in *VoteReq, opts ...grpc.CallOption) (*VoteRsp, error) {
	out := new(VoteRsp)
	err := c.cc.Invoke(ctx, "/pb.Peer/Vote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PeerServer is the server API for Peer service.
type PeerServer interface {
	AppendEntries(context.Context, *AppendEntriesReq) (*AppendEntriesRsp, error)
	Vote(context.Context, *VoteReq) (*VoteRsp, error)
}

// UnimplementedPeerServer can be embedded to have forward compatible implementations.
type UnimplementedPeerServer struct {
}

func (*UnimplementedPeerServer) AppendEntries(ctx context.Context, req *AppendEntriesReq) (*AppendEntriesRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendEntries not implemented")
}
func (*UnimplementedPeerServer) Vote(ctx context.Context, req *VoteReq) (*VoteRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Vote not implemented")
}

func RegisterPeerServer(s *grpc.Server, srv PeerServer) {
	s.RegisterService(&_Peer_serviceDesc, srv)
}

func _Peer_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Peer/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).AppendEntries(ctx, req.(*AppendEntriesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Peer_Vote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).Vote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Peer/Vote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).Vote(ctx, req.(*VoteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Peer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Peer",
	HandlerType: (*PeerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntries",
			Handler:    _Peer_AppendEntries_Handler,
		},
		{
			MethodName: "Vote",
			Handler:    _Peer_Vote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Peer.proto",
}
